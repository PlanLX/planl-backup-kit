name: Docker Build

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'elasticsearch/**'
      - 'mysql/**'
      - 'postgresql/**'
      - 'mongodb/**'
      - '.github/workflows/docker-build.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'elasticsearch/**'
      - 'mysql/**'
      - 'postgresql/**'
      - 'mongodb/**'
      - '.github/workflows/docker-build.yml'

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      elasticsearch: ${{ steps.changes.outputs.elasticsearch }}
      mysql: ${{ steps.changes.outputs.mysql }}
      postgresql: ${{ steps.changes.outputs.postgresql }}
      mongodb: ${{ steps.changes.outputs.mongodb }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changes
        id: changes
        run: |
          # 获取上次提交的SHA
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
          else
            BASE_SHA="${{ github.event.before }}"
          fi
          
          # 如果没有BASE_SHA，使用默认分支
          if [ -z "$BASE_SHA" ]; then
            BASE_SHA="origin/main"
          fi
          
          echo "Comparing with: $BASE_SHA"
          
          # 检测各个目录的变更
          if git diff --name-only $BASE_SHA HEAD | grep -q "^elasticsearch/"; then
            echo "elasticsearch=true" >> $GITHUB_OUTPUT
            echo "Elasticsearch directory has changes"
          else
            echo "elasticsearch=false" >> $GITHUB_OUTPUT
          fi
          
          if git diff --name-only $BASE_SHA HEAD | grep -q "^mysql/"; then
            echo "mysql=true" >> $GITHUB_OUTPUT
            echo "MySQL directory has changes"
          else
            echo "mysql=false" >> $GITHUB_OUTPUT
          fi
          
          if git diff --name-only $BASE_SHA HEAD | grep -q "^postgresql/"; then
            echo "postgresql=true" >> $GITHUB_OUTPUT
            echo "PostgreSQL directory has changes"
          else
            echo "postgresql=false" >> $GITHUB_OUTPUT
          fi
          
          if git diff --name-only $BASE_SHA HEAD | grep -q "^mongodb/"; then
            echo "mongodb=true" >> $GITHUB_OUTPUT
            echo "MongoDB directory has changes"
          else
            echo "mongodb=false" >> $GITHUB_OUTPUT
          fi

  build-elasticsearch:
    needs: detect-changes
    if: needs.detect-changes.outputs.elasticsearch == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/elasticsearch
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./elasticsearch
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

  build-mysql:
    needs: detect-changes
    if: needs.detect-changes.outputs.mysql == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/mysql
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./mysql
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

  build-postgresql:
    needs: detect-changes
    if: needs.detect-changes.outputs.postgresql == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/postgresql
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./postgresql
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

  build-mongodb:
    needs: detect-changes
    if: needs.detect-changes.outputs.mongodb == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/mongodb
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./mongodb
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

  build-summary:
    needs: [detect-changes, build-elasticsearch, build-mysql, build-postgresql, build-mongodb]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Build Summary
        run: |
          echo "## Docker Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Changes Detected:" >> $GITHUB_STEP_SUMMARY
          echo "- Elasticsearch: ${{ needs.detect-changes.outputs.elasticsearch }}" >> $GITHUB_STEP_SUMMARY
          echo "- MySQL: ${{ needs.detect-changes.outputs.mysql }}" >> $GITHUB_STEP_SUMMARY
          echo "- PostgreSQL: ${{ needs.detect-changes.outputs.postgresql }}" >> $GITHUB_STEP_SUMMARY
          echo "- MongoDB: ${{ needs.detect-changes.outputs.mongodb }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Build Results:" >> $GITHUB_STEP_SUMMARY
          echo "- Elasticsearch: ${{ needs.build-elasticsearch.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- MySQL: ${{ needs.build-mysql.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- PostgreSQL: ${{ needs.build-postgresql.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- MongoDB: ${{ needs.build-mongodb.result }}" >> $GITHUB_STEP_SUMMARY